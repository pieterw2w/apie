{
    "openapi": "3.0.1",
    "info": {
        "title": "Unit test title",
        "version": "1.0"
    },
    "paths": {
        "/application_info": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Retrieves all instances of application_info",
                        "headers": {
                            "x-ratelimit-limit": {
                                "$ref": "#/components/headers/x-ratelimit-limit"
                            },
                            "x-ratelimit-remaining": {
                                "$ref": "#/components/headers/x-ratelimit-remaining"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "title": "application_info",
                                        "description": "application_info get for groups get, read",
                                        "type": "object",
                                        "properties": {
                                            "app_name": {
                                                "type": "string",
                                                "nullable": false
                                            },
                                            "environment": {
                                                "type": "string",
                                                "nullable": false
                                            },
                                            "hash": {
                                                "type": "string",
                                                "nullable": false
                                            },
                                            "debug": {
                                                "type": "boolean",
                                                "nullable": false
                                            },
                                            "id": {
                                                "description": "There is always only one resource, which is 'name'.",
                                                "type": "string",
                                                "nullable": false
                                            }
                                        },
                                        "xml": {
                                            "name": "item"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "title": "application_info",
                                        "description": "application_info get for groups get, read",
                                        "type": "object",
                                        "properties": {
                                            "app_name": {
                                                "type": "string",
                                                "nullable": false
                                            },
                                            "environment": {
                                                "type": "string",
                                                "nullable": false
                                            },
                                            "hash": {
                                                "type": "string",
                                                "nullable": false
                                            },
                                            "debug": {
                                                "type": "boolean",
                                                "nullable": false
                                            },
                                            "id": {
                                                "description": "There is always only one resource, which is 'name'.",
                                                "type": "string",
                                                "nullable": false
                                            }
                                        },
                                        "xml": {
                                            "name": "item"
                                        }
                                    },
                                    "xml": {
                                        "name": "response"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequests"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    },
                    "502": {
                        "$ref": "#/components/responses/ServerDependencyError"
                    },
                    "503": {
                        "$ref": "#/components/responses/MaintenanceMode"
                    }
                },
                "tags": [
                    "application_info"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "pagination index counting from 0",
                        "schema": {
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "number of results",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ]
            }
        },
        "/application_info/{id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Retrieves a single instance of application_info",
                        "headers": {
                            "x-ratelimit-limit": {
                                "$ref": "#/components/headers/x-ratelimit-limit"
                            },
                            "x-ratelimit-remaining": {
                                "$ref": "#/components/headers/x-ratelimit-remaining"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "application_info",
                                    "description": "application_info get for groups get, read",
                                    "type": "object",
                                    "properties": {
                                        "app_name": {
                                            "type": "string",
                                            "nullable": false
                                        },
                                        "environment": {
                                            "type": "string",
                                            "nullable": false
                                        },
                                        "hash": {
                                            "type": "string",
                                            "nullable": false
                                        },
                                        "debug": {
                                            "type": "boolean",
                                            "nullable": false
                                        },
                                        "id": {
                                            "description": "There is always only one resource, which is 'name'.",
                                            "type": "string",
                                            "nullable": false
                                        }
                                    },
                                    "xml": {
                                        "name": "item"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "title": "application_info",
                                    "description": "application_info get for groups get, read",
                                    "type": "object",
                                    "properties": {
                                        "app_name": {
                                            "type": "string",
                                            "nullable": false
                                        },
                                        "environment": {
                                            "type": "string",
                                            "nullable": false
                                        },
                                        "hash": {
                                            "type": "string",
                                            "nullable": false
                                        },
                                        "debug": {
                                            "type": "boolean",
                                            "nullable": false
                                        },
                                        "id": {
                                            "description": "There is always only one resource, which is 'name'.",
                                            "type": "string",
                                            "nullable": false
                                        }
                                    },
                                    "xml": {
                                        "name": "item"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequests"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    },
                    "502": {
                        "$ref": "#/components/responses/ServerDependencyError"
                    },
                    "503": {
                        "$ref": "#/components/responses/MaintenanceMode"
                    }
                },
                "tags": [
                    "application_info"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "the id of the resource",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/simple_popo": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Retrieves all instances of simple_popo",
                        "headers": {
                            "x-ratelimit-limit": {
                                "$ref": "#/components/headers/x-ratelimit-limit"
                            },
                            "x-ratelimit-remaining": {
                                "$ref": "#/components/headers/x-ratelimit-remaining"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "title": "simple_popo",
                                        "description": "simple_popo get for groups get, read",
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "nullable": false
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "arbitrary_field": {
                                                "type": "string",
                                                "nullable": true
                                            }
                                        },
                                        "xml": {
                                            "name": "item"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "title": "simple_popo",
                                        "description": "simple_popo get for groups get, read",
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "nullable": false
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "arbitrary_field": {
                                                "type": "string",
                                                "nullable": true
                                            }
                                        },
                                        "xml": {
                                            "name": "item"
                                        }
                                    },
                                    "xml": {
                                        "name": "response"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequests"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    },
                    "502": {
                        "$ref": "#/components/responses/ServerDependencyError"
                    },
                    "503": {
                        "$ref": "#/components/responses/MaintenanceMode"
                    }
                },
                "tags": [
                    "simple_popo"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "pagination index counting from 0",
                        "schema": {
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "number of results",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Creates a new instance of simple_popo",
                        "headers": {
                            "x-ratelimit-limit": {
                                "$ref": "#/components/headers/x-ratelimit-limit"
                            },
                            "x-ratelimit-remaining": {
                                "$ref": "#/components/headers/x-ratelimit-remaining"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "simple_popo",
                                    "description": "simple_popo get for groups get, read",
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "nullable": false
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "arbitrary_field": {
                                            "type": "string",
                                            "nullable": true
                                        }
                                    },
                                    "xml": {
                                        "name": "item"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "title": "simple_popo",
                                    "description": "simple_popo get for groups get, read",
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "nullable": false
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "arbitrary_field": {
                                            "type": "string",
                                            "nullable": true
                                        }
                                    },
                                    "xml": {
                                        "name": "item"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "415": {
                        "$ref": "#/components/responses/InvalidFormat"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequests"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    },
                    "502": {
                        "$ref": "#/components/responses/ServerDependencyError"
                    },
                    "503": {
                        "$ref": "#/components/responses/MaintenanceMode"
                    }
                },
                "tags": [
                    "simple_popo"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "simple_popo",
                                "description": "simple_popo post for groups post, write",
                                "type": "object",
                                "properties": {
                                    "arbitrary_field": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "xml": {
                                    "name": "item"
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "title": "simple_popo",
                                "description": "simple_popo post for groups post, write",
                                "type": "object",
                                "properties": {
                                    "arbitrary_field": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "xml": {
                                    "name": "item"
                                }
                            }
                        }
                    },
                    "description": "the resource as JSON to persist",
                    "required": true
                }
            }
        },
        "/simple_popo/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "the id of the resource",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/full_rest_object": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Retrieves all instances of full_rest_object",
                        "headers": {
                            "x-ratelimit-limit": {
                                "$ref": "#/components/headers/x-ratelimit-limit"
                            },
                            "x-ratelimit-remaining": {
                                "$ref": "#/components/headers/x-ratelimit-remaining"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "title": "full_rest_object",
                                        "description": "full_rest_object get for groups get, read",
                                        "type": "object",
                                        "properties": {
                                            "uuid": {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "string_value": {
                                                "type": "string",
                                                "nullable": false
                                            },
                                            "value_object": {
                                                "type": "string",
                                                "format": "value_object"
                                            }
                                        },
                                        "xml": {
                                            "name": "item"
                                        }
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "title": "full_rest_object",
                                        "description": "full_rest_object get for groups get, read",
                                        "type": "object",
                                        "properties": {
                                            "uuid": {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "string_value": {
                                                "type": "string",
                                                "nullable": false
                                            },
                                            "value_object": {
                                                "type": "string",
                                                "format": "value_object"
                                            }
                                        },
                                        "xml": {
                                            "name": "item"
                                        }
                                    },
                                    "xml": {
                                        "name": "response"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequests"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    },
                    "502": {
                        "$ref": "#/components/responses/ServerDependencyError"
                    },
                    "503": {
                        "$ref": "#/components/responses/MaintenanceMode"
                    }
                },
                "tags": [
                    "full_rest_object"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "pagination index counting from 0",
                        "schema": {
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "number of results",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "uuid",
                        "in": "query",
                        "description": "search filter uuid",
                        "schema": {
                            "type": "string",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "stringValue",
                        "in": "query",
                        "description": "search filter stringValue",
                        "schema": {
                            "type": "string",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "valueObject",
                        "in": "query",
                        "description": "search filter valueObject",
                        "schema": {
                            "type": "string",
                            "minimum": 1
                        }
                    }
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Creates a new instance of full_rest_object",
                        "headers": {
                            "x-ratelimit-limit": {
                                "$ref": "#/components/headers/x-ratelimit-limit"
                            },
                            "x-ratelimit-remaining": {
                                "$ref": "#/components/headers/x-ratelimit-remaining"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "full_rest_object",
                                    "description": "full_rest_object get for groups get, read",
                                    "type": "object",
                                    "properties": {
                                        "uuid": {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "string_value": {
                                            "type": "string",
                                            "nullable": false
                                        },
                                        "value_object": {
                                            "type": "string",
                                            "format": "value_object"
                                        }
                                    },
                                    "xml": {
                                        "name": "item"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "title": "full_rest_object",
                                    "description": "full_rest_object get for groups get, read",
                                    "type": "object",
                                    "properties": {
                                        "uuid": {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "string_value": {
                                            "type": "string",
                                            "nullable": false
                                        },
                                        "value_object": {
                                            "type": "string",
                                            "format": "value_object"
                                        }
                                    },
                                    "xml": {
                                        "name": "item"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "415": {
                        "$ref": "#/components/responses/InvalidFormat"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequests"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    },
                    "502": {
                        "$ref": "#/components/responses/ServerDependencyError"
                    },
                    "503": {
                        "$ref": "#/components/responses/MaintenanceMode"
                    }
                },
                "tags": [
                    "full_rest_object"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "full_rest_object",
                                "description": "full_rest_object post for groups post, write",
                                "type": "object",
                                "properties": {
                                    "uuid": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "string_value": {
                                        "type": "string",
                                        "nullable": false
                                    },
                                    "value_object": {
                                        "type": "string",
                                        "format": "value_object"
                                    }
                                },
                                "xml": {
                                    "name": "item"
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "title": "full_rest_object",
                                "description": "full_rest_object post for groups post, write",
                                "type": "object",
                                "properties": {
                                    "uuid": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "string_value": {
                                        "type": "string",
                                        "nullable": false
                                    },
                                    "value_object": {
                                        "type": "string",
                                        "format": "value_object"
                                    }
                                },
                                "xml": {
                                    "name": "item"
                                }
                            }
                        }
                    },
                    "description": "the resource as JSON to persist",
                    "required": true
                }
            }
        },
        "/full_rest_object/{uuid}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Retrieves a single instance of full_rest_object",
                        "headers": {
                            "x-ratelimit-limit": {
                                "$ref": "#/components/headers/x-ratelimit-limit"
                            },
                            "x-ratelimit-remaining": {
                                "$ref": "#/components/headers/x-ratelimit-remaining"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "full_rest_object",
                                    "description": "full_rest_object get for groups get, read",
                                    "type": "object",
                                    "properties": {
                                        "uuid": {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "string_value": {
                                            "type": "string",
                                            "nullable": false
                                        },
                                        "value_object": {
                                            "type": "string",
                                            "format": "value_object"
                                        }
                                    },
                                    "xml": {
                                        "name": "item"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "title": "full_rest_object",
                                    "description": "full_rest_object get for groups get, read",
                                    "type": "object",
                                    "properties": {
                                        "uuid": {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "string_value": {
                                            "type": "string",
                                            "nullable": false
                                        },
                                        "value_object": {
                                            "type": "string",
                                            "format": "value_object"
                                        }
                                    },
                                    "xml": {
                                        "name": "item"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequests"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    },
                    "502": {
                        "$ref": "#/components/responses/ServerDependencyError"
                    },
                    "503": {
                        "$ref": "#/components/responses/MaintenanceMode"
                    }
                },
                "tags": [
                    "full_rest_object"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Retrieves and update a single instance of full_rest_object",
                        "headers": {
                            "x-ratelimit-limit": {
                                "$ref": "#/components/headers/x-ratelimit-limit"
                            },
                            "x-ratelimit-remaining": {
                                "$ref": "#/components/headers/x-ratelimit-remaining"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "full_rest_object",
                                    "description": "full_rest_object get for groups get, read",
                                    "type": "object",
                                    "properties": {
                                        "uuid": {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "string_value": {
                                            "type": "string",
                                            "nullable": false
                                        },
                                        "value_object": {
                                            "type": "string",
                                            "format": "value_object"
                                        }
                                    },
                                    "xml": {
                                        "name": "item"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "title": "full_rest_object",
                                    "description": "full_rest_object get for groups get, read",
                                    "type": "object",
                                    "properties": {
                                        "uuid": {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "string_value": {
                                            "type": "string",
                                            "nullable": false
                                        },
                                        "value_object": {
                                            "type": "string",
                                            "format": "value_object"
                                        }
                                    },
                                    "xml": {
                                        "name": "item"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "415": {
                        "$ref": "#/components/responses/InvalidFormat"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationError"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequests"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    },
                    "502": {
                        "$ref": "#/components/responses/ServerDependencyError"
                    },
                    "503": {
                        "$ref": "#/components/responses/MaintenanceMode"
                    }
                },
                "tags": [
                    "full_rest_object"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "full_rest_object",
                                "description": "full_rest_object put for groups put, write",
                                "type": "object",
                                "properties": {
                                    "string_value": {
                                        "type": "string",
                                        "nullable": false
                                    },
                                    "value_object": {
                                        "type": "string",
                                        "format": "value_object"
                                    }
                                },
                                "xml": {
                                    "name": "item"
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "title": "full_rest_object",
                                "description": "full_rest_object put for groups put, write",
                                "type": "object",
                                "properties": {
                                    "string_value": {
                                        "type": "string",
                                        "nullable": false
                                    },
                                    "value_object": {
                                        "type": "string",
                                        "format": "value_object"
                                    }
                                },
                                "xml": {
                                    "name": "item"
                                }
                            }
                        }
                    },
                    "description": "the resource as JSON to persist",
                    "required": true
                }
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "Deletes a single instance of full_rest_object",
                        "headers": {
                            "x-ratelimit-limit": {
                                "$ref": "#/components/headers/x-ratelimit-limit"
                            },
                            "x-ratelimit-remaining": {
                                "$ref": "#/components/headers/x-ratelimit-remaining"
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/NotAuthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequests"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalError"
                    },
                    "502": {
                        "$ref": "#/components/responses/ServerDependencyError"
                    },
                    "503": {
                        "$ref": "#/components/responses/MaintenanceMode"
                    }
                },
                "tags": [
                    "full_rest_object"
                ]
            },
            "parameters": [
                {
                    "name": "uuid",
                    "in": "path",
                    "description": "the id of the resource",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        }
    },
    "servers": [
        {
            "url": "/test-url"
        }
    ],
    "components": {
        "schemas": {
            "Error": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "code": {
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "integer"
                            }
                        ]
                    },
                    "trace": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "response"
                }
            }
        },
        "responses": {
            "InvalidFormat": {
                "description": "The body input could not be parsed",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "ValidationError": {
                "description": "The body input was in a proper format, but the input values were not valid",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "code": {
                                    "oneOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        }
                                    ]
                                },
                                "trace": {
                                    "type": "string"
                                },
                                "errors": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "xml": {
                                "name": "response"
                            }
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "code": {
                                    "oneOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        }
                                    ]
                                },
                                "trace": {
                                    "type": "string"
                                },
                                "errors": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "xml": {
                                "name": "response"
                            }
                        }
                    }
                }
            },
            "TooManyRequests": {
                "description": "Too many requests per seconds were sent",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "MaintenanceMode": {
                "description": "App is in maintenance mode",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "NotFound": {
                "description": "Response when resource could not be found",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "NotAuthorized": {
                "description": "You have no permission to do this call",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "InternalError": {
                "description": "An internal error occured",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "ServerDependencyError": {
                "description": "The server required an external response which threw an error",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            }
        },
        "headers": {
            "x-ratelimit-limit": {
                "description": "Request limit per hour",
                "schema": {
                    "type": "integer"
                },
                "example": 100
            },
            "x-ratelimit-remaining": {
                "description": "Request limit per hour",
                "schema": {
                    "type": "integer"
                },
                "example": 94
            }
        }
    }
}