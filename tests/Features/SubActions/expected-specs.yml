openapi: 3.0.1
info:
  title: Apie
  version: '4.0'
paths:
  /full_rest_object:
    get:
      responses:
        200:
          description: 'Retrieves all instances of full_rest_object'
          headers:
            x-pagination-count:
              $ref: '#/components/headers/Count'
            x-pagination-previous:
              $ref: '#/components/headers/Url'
            x-pagination-next:
              $ref: '#/components/headers/Url'
            x-pagination-first:
              $ref: '#/components/headers/Url'
            x-pagination-last:
              $ref: '#/components/headers/Url'
          content:
            application/json:
              schema:
                type: array
                items:
                  title: FullRestObject
                  description: 'FullRestObject get for groups get, read'
                  type: object
                  properties:
                    uuid:
                      type: string
                      format: uuid
                    string_value:
                      type: string
                      nullable: false
                    value_object:
                      type: string
                      format: value_object
            application/xml:
              schema:
                type: array
                items:
                  title: FullRestObject
                  description: 'FullRestObject get for groups get, read'
                  type: object
                  properties:
                    uuid:
                      type: string
                      format: uuid
                    string_value:
                      type: string
                      nullable: false
                    value_object:
                      type: string
                      format: value_object
                  xml:
                    name: item
                xml:
                  name: response
      tags:
        - full_rest_object
      summary: 'get/search all instances of full_rest_object'
      operationId: resourceGetAllFullRestObject
      parameters:
        -
          name: page
          in: query
          description: 'pagination index counting from 0'
          schema:
            type: integer
            minimum: 0
        -
          name: limit
          in: query
          description: 'number of results'
          schema:
            type: integer
            minimum: 1
        -
          name: uuid
          in: query
          description: 'search filter uuid'
          schema:
            type: string
        -
          name: stringValue
          in: query
          description: 'search filter stringValue'
          schema:
            type: string
        -
          name: valueObject
          in: query
          description: 'search filter valueObject'
          schema:
            type: string
    post:
      responses:
        200:
          description: 'Creates a new instance of full_rest_object'
          headers: {  }
          content:
            application/json:
              schema:
                title: FullRestObject
                description: 'FullRestObject get for groups get, read'
                type: object
                properties:
                  uuid:
                    type: string
                    format: uuid
                  string_value:
                    type: string
                    nullable: false
                  value_object:
                    type: string
                    format: value_object
            application/xml:
              schema:
                title: FullRestObject
                description: 'FullRestObject get for groups get, read'
                type: object
                properties:
                  uuid:
                    type: string
                    format: uuid
                  string_value:
                    type: string
                    nullable: false
                  value_object:
                    type: string
                    format: value_object
                xml:
                  name: item
        415:
          $ref: '#/components/responses/InvalidFormat'
        422:
          $ref: '#/components/responses/ValidationError'
      tags:
        - full_rest_object
      summary: 'create a new single instance of full_rest_object'
      operationId: resourcePostSingleFullRestObject
      requestBody:
        content:
          application/json:
            schema:
              title: FullRestObject
              description: 'FullRestObject post for groups post, write'
              type: object
              properties:
                uuid:
                  type: string
                  format: uuid
                string_value:
                  type: string
                  nullable: false
                value_object:
                  type: string
                  format: value_object
          application/xml:
            schema:
              title: FullRestObject
              description: 'FullRestObject post for groups post, write'
              type: object
              properties:
                uuid:
                  type: string
                  format: uuid
                string_value:
                  type: string
                  nullable: false
                value_object:
                  type: string
                  format: value_object
              xml:
                name: item
        description: 'the resource as JSON to persist'
        required: true
  '/full_rest_object/{uuid}':
    get:
      responses:
        200:
          description: 'Retrieves a single instance of full_rest_object'
          headers:
            x-pagination-count:
              $ref: '#/components/headers/Count'
            x-pagination-previous:
              $ref: '#/components/headers/Url'
            x-pagination-next:
              $ref: '#/components/headers/Url'
            x-pagination-first:
              $ref: '#/components/headers/Url'
            x-pagination-last:
              $ref: '#/components/headers/Url'
          content:
            application/json:
              schema:
                title: FullRestObject
                description: 'FullRestObject get for groups get, read'
                type: object
                properties:
                  uuid:
                    type: string
                    format: uuid
                  string_value:
                    type: string
                    nullable: false
                  value_object:
                    type: string
                    format: value_object
            application/xml:
              schema:
                title: FullRestObject
                description: 'FullRestObject get for groups get, read'
                type: object
                properties:
                  uuid:
                    type: string
                    format: uuid
                  string_value:
                    type: string
                    nullable: false
                  value_object:
                    type: string
                    format: value_object
                xml:
                  name: item
        404:
          $ref: '#/components/responses/NotFound'
      tags:
        - full_rest_object
      summary: 'retrieve a single instance of full_rest_object'
      operationId: resourceGetSingleFullRestObject
    put:
      responses:
        200:
          description: 'Retrieves and update a single instance of full_rest_object'
          headers: {  }
          content:
            application/json:
              schema:
                title: FullRestObject
                description: 'FullRestObject get for groups get, read'
                type: object
                properties:
                  uuid:
                    type: string
                    format: uuid
                  string_value:
                    type: string
                    nullable: false
                  value_object:
                    type: string
                    format: value_object
            application/xml:
              schema:
                title: FullRestObject
                description: 'FullRestObject get for groups get, read'
                type: object
                properties:
                  uuid:
                    type: string
                    format: uuid
                  string_value:
                    type: string
                    nullable: false
                  value_object:
                    type: string
                    format: value_object
                xml:
                  name: item
        404:
          $ref: '#/components/responses/NotFound'
        415:
          $ref: '#/components/responses/InvalidFormat'
        422:
          $ref: '#/components/responses/ValidationError'
      tags:
        - full_rest_object
      summary: 'modify a single instance of full_rest_object'
      operationId: resourcePutSingleFullRestObject
      requestBody:
        content:
          application/json:
            schema:
              title: FullRestObject
              description: 'FullRestObject put for groups put, write'
              type: object
              properties:
                string_value:
                  type: string
                  nullable: false
                value_object:
                  type: string
                  format: value_object
          application/xml:
            schema:
              title: FullRestObject
              description: 'FullRestObject put for groups put, write'
              type: object
              properties:
                string_value:
                  type: string
                  nullable: false
                value_object:
                  type: string
                  format: value_object
              xml:
                name: item
        description: 'the resource as JSON to persist'
        required: true
    delete:
      responses:
        204:
          description: 'Deletes a single instance of full_rest_object'
          headers: {  }
        404:
          $ref: '#/components/responses/NotFound'
      tags:
        - full_rest_object
      summary: 'delete a single instance of full_rest_object'
      operationId: resourceDeleteSingleFullRestObject
    parameters:
      -
        name: uuid
        in: path
        description: 'the id of the resource'
        required: true
        schema:
          type: string
  '/full_rest_object/{uuid}/md5':
    post:
      responses:
        200:
          description: 'Retrieves return value of md5'
          headers: {  }
        404:
          $ref: '#/components/responses/NotFound'
      tags:
        - full_rest_object
      summary: ''
      operationId: resourcePostSubActionFullRestObjectMd5
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {  }
          application/xml:
            schema:
              type: object
              properties: {  }
              xml:
                name: item
        description: 'the resource as JSON to persist'
        required: true
    parameters:
      -
        name: uuid
        in: path
        description: 'the id of the resource'
        required: true
        schema:
          type: string
  '/full_rest_object/{uuid}/reflection':
    post:
      responses:
        200:
          description: 'Retrieves return value of reflection'
          headers: {  }
        404:
          $ref: '#/components/responses/NotFound'
      tags:
        - full_rest_object
      summary: ''
      operationId: resourcePostSubActionFullRestObjectReflection
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {  }
          application/xml:
            schema:
              type: object
              properties: {  }
              xml:
                name: item
        description: 'the resource as JSON to persist'
        required: true
    parameters:
      -
        name: uuid
        in: path
        description: 'the id of the resource'
        required: true
        schema:
          type: string
  '/full_rest_object/{uuid}/other':
    post:
      responses:
        200:
          description: 'Retrieves return value of other'
          headers: {  }
        404:
          $ref: '#/components/responses/NotFound'
      tags:
        - full_rest_object
      summary: ''
      operationId: resourcePostSubActionFullRestObjectOther
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {  }
          application/xml:
            schema:
              type: object
              properties: {  }
              xml:
                name: item
        description: 'the resource as JSON to persist'
        required: true
    parameters:
      -
        name: uuid
        in: path
        description: 'the id of the resource'
        required: true
        schema:
          type: string
  /simple_popo:
    get:
      responses:
        200:
          description: 'Retrieves all instances of simple_popo'
          headers:
            x-pagination-count:
              $ref: '#/components/headers/Count'
            x-pagination-previous:
              $ref: '#/components/headers/Url'
            x-pagination-next:
              $ref: '#/components/headers/Url'
            x-pagination-first:
              $ref: '#/components/headers/Url'
            x-pagination-last:
              $ref: '#/components/headers/Url'
          content:
            application/json:
              schema:
                type: array
                items:
                  title: SimplePopo
                  description: 'SimplePopo get for groups get, read'
                  type: object
                  properties:
                    id:
                      type: string
                      nullable: false
                    created_at:
                      type: string
                      format: date-time
                    arbitrary_field: {  }
            application/xml:
              schema:
                type: array
                items:
                  title: SimplePopo
                  description: 'SimplePopo get for groups get, read'
                  type: object
                  properties:
                    id:
                      type: string
                      nullable: false
                    created_at:
                      type: string
                      format: date-time
                    arbitrary_field: {  }
                  xml:
                    name: item
                xml:
                  name: response
      tags:
        - simple_popo
      summary: 'get/search all instances of simple_popo'
      operationId: resourceGetAllSimplePopo
      parameters:
        -
          name: page
          in: query
          description: 'pagination index counting from 0'
          schema:
            type: integer
            minimum: 0
        -
          name: limit
          in: query
          description: 'number of results'
          schema:
            type: integer
            minimum: 1
    post:
      responses:
        200:
          description: 'Creates a new instance of simple_popo'
          headers: {  }
          content:
            application/json:
              schema:
                title: SimplePopo
                description: 'SimplePopo get for groups get, read'
                type: object
                properties:
                  id:
                    type: string
                    nullable: false
                  created_at:
                    type: string
                    format: date-time
                  arbitrary_field: {  }
            application/xml:
              schema:
                title: SimplePopo
                description: 'SimplePopo get for groups get, read'
                type: object
                properties:
                  id:
                    type: string
                    nullable: false
                  created_at:
                    type: string
                    format: date-time
                  arbitrary_field: {  }
                xml:
                  name: item
        415:
          $ref: '#/components/responses/InvalidFormat'
        422:
          $ref: '#/components/responses/ValidationError'
      tags:
        - simple_popo
      summary: 'create a new single instance of simple_popo'
      operationId: resourcePostSingleSimplePopo
      requestBody:
        content:
          application/json:
            schema:
              title: SimplePopo
              description: 'SimplePopo post for groups post, write'
              type: object
              properties:
                arbitrary_field: {  }
          application/xml:
            schema:
              title: SimplePopo
              description: 'SimplePopo post for groups post, write'
              type: object
              properties:
                arbitrary_field: {  }
              xml:
                name: item
        description: 'the resource as JSON to persist'
        required: true
  '/simple_popo/{id}':
    parameters:
      -
        name: id
        in: path
        description: 'the id of the resource'
        required: true
        schema:
          type: string
  '/simple_popo/{id}/md5':
    post:
      responses:
        200:
          description: 'Retrieves return value of md5'
          headers: {  }
        404:
          $ref: '#/components/responses/NotFound'
      tags:
        - simple_popo
      summary: ''
      operationId: resourcePostSubActionSimplePopoMd5
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {  }
          application/xml:
            schema:
              type: object
              properties: {  }
              xml:
                name: item
        description: 'the resource as JSON to persist'
        required: true
    parameters:
      -
        name: id
        in: path
        description: 'the id of the resource'
        required: true
        schema:
          type: string
  '/simple_popo/{id}/reflection':
    post:
      responses:
        200:
          description: 'Retrieves return value of reflection'
          headers: {  }
        404:
          $ref: '#/components/responses/NotFound'
      tags:
        - simple_popo
      summary: ''
      operationId: resourcePostSubActionSimplePopoReflection
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {  }
          application/xml:
            schema:
              type: object
              properties: {  }
              xml:
                name: item
        description: 'the resource as JSON to persist'
        required: true
    parameters:
      -
        name: id
        in: path
        description: 'the id of the resource'
        required: true
        schema:
          type: string
  '/simple_popo/{id}/other':
    post:
      responses:
        200:
          description: 'Retrieves return value of other'
          headers: {  }
        404:
          $ref: '#/components/responses/NotFound'
      tags:
        - simple_popo
      summary: ''
      operationId: resourcePostSubActionSimplePopoOther
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {  }
          application/xml:
            schema:
              type: object
              properties: {  }
              xml:
                name: item
        description: 'the resource as JSON to persist'
        required: true
    parameters:
      -
        name: id
        in: path
        description: 'the id of the resource'
        required: true
        schema:
          type: string
  /sum_example:
    post:
      responses:
        200:
          description: 'Creates a new instance of sum_example'
          headers: {  }
          content:
            application/json:
              schema:
                title: SumExample
                description: 'SumExample get for groups get, read'
                type: object
                properties:
                  addition:
                    type: number
                    format: float
                    nullable: false
            application/xml:
              schema:
                title: SumExample
                description: 'SumExample get for groups get, read'
                type: object
                properties:
                  addition:
                    type: number
                    format: float
                    nullable: false
                xml:
                  name: item
        415:
          $ref: '#/components/responses/InvalidFormat'
        422:
          $ref: '#/components/responses/ValidationError'
      tags:
        - sum_example
      summary: 'create a new single instance of sum_example'
      operationId: resourcePostSingleSumExample
      requestBody:
        content:
          application/json:
            schema:
              title: SumExample
              description: 'SumExample post for groups post, write'
              type: object
              properties:
                one:
                  type: number
                  format: float
                  nullable: false
                two:
                  type: number
                  format: float
                  nullable: false
          application/xml:
            schema:
              title: SumExample
              description: 'SumExample post for groups post, write'
              type: object
              properties:
                one:
                  type: number
                  format: float
                  nullable: false
                two:
                  type: number
                  format: float
                  nullable: false
              xml:
                name: item
        description: 'the resource as JSON to persist'
        required: true
  /another_simple_popo:
    get:
      responses:
        200:
          description: 'Retrieves all instances of another_simple_popo'
          headers:
            x-pagination-count:
              $ref: '#/components/headers/Count'
            x-pagination-previous:
              $ref: '#/components/headers/Url'
            x-pagination-next:
              $ref: '#/components/headers/Url'
            x-pagination-first:
              $ref: '#/components/headers/Url'
            x-pagination-last:
              $ref: '#/components/headers/Url'
          content:
            application/json:
              schema:
                type: array
                items:
                  title: AnotherSimplePopo
                  description: 'AnotherSimplePopo get for groups get, read'
                  type: object
                  properties:
                    id:
                      type: integer
                      nullable: false
                    created_at:
                      type: string
                      format: date-time
                    arbitrary_field: {  }
            application/xml:
              schema:
                type: array
                items:
                  title: AnotherSimplePopo
                  description: 'AnotherSimplePopo get for groups get, read'
                  type: object
                  properties:
                    id:
                      type: integer
                      nullable: false
                    created_at:
                      type: string
                      format: date-time
                    arbitrary_field: {  }
                  xml:
                    name: item
                xml:
                  name: response
      tags:
        - another_simple_popo
      summary: 'get/search all instances of another_simple_popo'
      operationId: resourceGetAllAnotherSimplePopo
      parameters:
        -
          name: page
          in: query
          description: 'pagination index counting from 0'
          schema:
            type: integer
            minimum: 0
        -
          name: limit
          in: query
          description: 'number of results'
          schema:
            type: integer
            minimum: 1
    post:
      responses:
        200:
          description: 'Creates a new instance of another_simple_popo'
          headers: {  }
          content:
            application/json:
              schema:
                title: AnotherSimplePopo
                description: 'AnotherSimplePopo get for groups get, read'
                type: object
                properties:
                  id:
                    type: integer
                    nullable: false
                  created_at:
                    type: string
                    format: date-time
                  arbitrary_field: {  }
            application/xml:
              schema:
                title: AnotherSimplePopo
                description: 'AnotherSimplePopo get for groups get, read'
                type: object
                properties:
                  id:
                    type: integer
                    nullable: false
                  created_at:
                    type: string
                    format: date-time
                  arbitrary_field: {  }
                xml:
                  name: item
        415:
          $ref: '#/components/responses/InvalidFormat'
        422:
          $ref: '#/components/responses/ValidationError'
      tags:
        - another_simple_popo
      summary: 'create a new single instance of another_simple_popo'
      operationId: resourcePostSingleAnotherSimplePopo
      requestBody:
        content:
          application/json:
            schema:
              title: AnotherSimplePopo
              description: 'AnotherSimplePopo post for groups post, write'
              type: object
              properties:
                arbitrary_field: {  }
          application/xml:
            schema:
              title: AnotherSimplePopo
              description: 'AnotherSimplePopo post for groups post, write'
              type: object
              properties:
                arbitrary_field: {  }
              xml:
                name: item
        description: 'the resource as JSON to persist'
        required: true
  '/another_simple_popo/{id}':
    get:
      responses:
        200:
          description: 'Retrieves a single instance of another_simple_popo'
          headers: {  }
          content:
            application/json:
              schema:
                title: AnotherSimplePopo
                description: 'AnotherSimplePopo get for groups get, read'
                type: object
                properties:
                  id:
                    type: integer
                    nullable: false
                  created_at:
                    type: string
                    format: date-time
                  arbitrary_field: {  }
            application/xml:
              schema:
                title: AnotherSimplePopo
                description: 'AnotherSimplePopo get for groups get, read'
                type: object
                properties:
                  id:
                    type: integer
                    nullable: false
                  created_at:
                    type: string
                    format: date-time
                  arbitrary_field: {  }
                xml:
                  name: item
        404:
          $ref: '#/components/responses/NotFound'
      tags:
        - another_simple_popo
      summary: 'retrieve a single instance of another_simple_popo'
      operationId: resourceGetSingleAnotherSimplePopo
    put:
      responses:
        200:
          description: 'Retrieves and update a single instance of another_simple_popo'
          headers: {  }
          content:
            application/json:
              schema:
                title: AnotherSimplePopo
                description: 'AnotherSimplePopo get for groups get, read'
                type: object
                properties:
                  id:
                    type: integer
                    nullable: false
                  created_at:
                    type: string
                    format: date-time
                  arbitrary_field: {  }
            application/xml:
              schema:
                title: AnotherSimplePopo
                description: 'AnotherSimplePopo get for groups get, read'
                type: object
                properties:
                  id:
                    type: integer
                    nullable: false
                  created_at:
                    type: string
                    format: date-time
                  arbitrary_field: {  }
                xml:
                  name: item
        404:
          $ref: '#/components/responses/NotFound'
        415:
          $ref: '#/components/responses/InvalidFormat'
        422:
          $ref: '#/components/responses/ValidationError'
      tags:
        - another_simple_popo
      summary: 'modify a single instance of another_simple_popo'
      operationId: resourcePutSingleAnotherSimplePopo
      requestBody:
        content:
          application/json:
            schema:
              title: AnotherSimplePopo
              description: 'AnotherSimplePopo put for groups put, write'
              type: object
              properties:
                arbitrary_field: {  }
          application/xml:
            schema:
              title: AnotherSimplePopo
              description: 'AnotherSimplePopo put for groups put, write'
              type: object
              properties:
                arbitrary_field: {  }
              xml:
                name: item
        description: 'the resource as JSON to persist'
        required: true
    delete:
      responses:
        204:
          description: 'Deletes a single instance of another_simple_popo'
          headers: {  }
        404:
          $ref: '#/components/responses/NotFound'
      tags:
        - another_simple_popo
      summary: 'delete a single instance of another_simple_popo'
      operationId: resourceDeleteSingleAnotherSimplePopo
    parameters:
      -
        name: id
        in: path
        description: 'the id of the resource'
        required: true
        schema:
          type: string
  '/another_simple_popo/{id}/md5':
    post:
      responses:
        200:
          description: 'Retrieves return value of md5'
          headers: {  }
        404:
          $ref: '#/components/responses/NotFound'
      tags:
        - another_simple_popo
      summary: ''
      operationId: resourcePostSubActionAnotherSimplePopoMd5
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {  }
          application/xml:
            schema:
              type: object
              properties: {  }
              xml:
                name: item
        description: 'the resource as JSON to persist'
        required: true
    parameters:
      -
        name: id
        in: path
        description: 'the id of the resource'
        required: true
        schema:
          type: string
  '/another_simple_popo/{id}/reflection':
    post:
      responses:
        200:
          description: 'Retrieves return value of reflection'
          headers: {  }
        404:
          $ref: '#/components/responses/NotFound'
      tags:
        - another_simple_popo
      summary: ''
      operationId: resourcePostSubActionAnotherSimplePopoReflection
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {  }
          application/xml:
            schema:
              type: object
              properties: {  }
              xml:
                name: item
        description: 'the resource as JSON to persist'
        required: true
    parameters:
      -
        name: id
        in: path
        description: 'the id of the resource'
        required: true
        schema:
          type: string
  '/another_simple_popo/{id}/other':
    post:
      responses:
        200:
          description: 'Retrieves return value of other'
          headers: {  }
        404:
          $ref: '#/components/responses/NotFound'
      tags:
        - another_simple_popo
      summary: ''
      operationId: resourcePostSubActionAnotherSimplePopoOther
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {  }
          application/xml:
            schema:
              type: object
              properties: {  }
              xml:
                name: item
        description: 'the resource as JSON to persist'
        required: true
    parameters:
      -
        name: id
        in: path
        description: 'the id of the resource'
        required: true
        schema:
          type: string
  '/another_simple_popo/{id}/sub':
    post:
      responses:
        200:
          description: 'Retrieves return value of sub'
          headers: {  }
          content:
            application/json:
              schema:
                title: SumExample
                description: 'SumExample get for groups get, read'
                type: object
                properties:
                  addition:
                    type: number
                    format: float
                    nullable: false
            application/xml:
              schema:
                title: SumExample
                description: 'SumExample get for groups get, read'
                type: object
                properties:
                  addition:
                    type: number
                    format: float
                    nullable: false
                xml:
                  name: item
        404:
          $ref: '#/components/responses/NotFound'
      tags:
        - another_simple_popo
      summary: ''
      operationId: resourcePostSubActionAnotherSimplePopoSub
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                one:
                  type: integer
                  nullable: false
                two:
                  type: integer
                  nullable: false
          application/xml:
            schema:
              type: object
              properties:
                one:
                  type: integer
                  nullable: false
                two:
                  type: integer
                  nullable: false
              xml:
                name: item
        description: 'the resource as JSON to persist'
        required: true
    parameters:
      -
        name: id
        in: path
        description: 'the id of the resource'
        required: true
        schema:
          type: string
  /application_info:
    get:
      responses:
        200:
          description: 'Retrieves all instances of application_info'
          headers:
            x-pagination-count:
              $ref: '#/components/headers/Count'
            x-pagination-previous:
              $ref: '#/components/headers/Url'
            x-pagination-next:
              $ref: '#/components/headers/Url'
            x-pagination-first:
              $ref: '#/components/headers/Url'
            x-pagination-last:
              $ref: '#/components/headers/Url'
          content:
            application/json:
              schema:
                type: array
                items:
                  title: ApplicationInfo
                  description: 'ApplicationInfo get for groups get, read'
                  type: object
                  properties:
                    app_name:
                      type: string
                      nullable: false
                    environment:
                      type: string
                      nullable: false
                    hash:
                      type: string
                      nullable: false
                    debug:
                      type: boolean
                      nullable: false
            application/xml:
              schema:
                type: array
                items:
                  title: ApplicationInfo
                  description: 'ApplicationInfo get for groups get, read'
                  type: object
                  properties:
                    app_name:
                      type: string
                      nullable: false
                    environment:
                      type: string
                      nullable: false
                    hash:
                      type: string
                      nullable: false
                    debug:
                      type: boolean
                      nullable: false
                  xml:
                    name: item
                xml:
                  name: response
      tags:
        - application_info
      summary: 'get/search all instances of application_info'
      operationId: resourceGetAllApplicationInfo
      parameters:
        -
          name: page
          in: query
          description: 'pagination index counting from 0'
          schema:
            type: integer
            minimum: 0
        -
          name: limit
          in: query
          description: 'number of results'
          schema:
            type: integer
            minimum: 1
  /status:
    get:
      responses:
        200:
          description: 'Retrieves all instances of status'
          headers:
            x-pagination-count:
              $ref: '#/components/headers/Count'
            x-pagination-previous:
              $ref: '#/components/headers/Url'
            x-pagination-next:
              $ref: '#/components/headers/Url'
            x-pagination-first:
              $ref: '#/components/headers/Url'
            x-pagination-last:
              $ref: '#/components/headers/Url'
          content:
            application/json:
              schema:
                type: array
                items:
                  title: Status
                  description: 'Status get for groups get, read'
                  type: object
                  properties:
                    id:
                      type: string
                      nullable: false
                    status:
                      type: string
                      nullable: false
                    optional_reference:
                      type: string
                      nullable: true
                    context:
                      type: array
                      items: {  }
                      nullable: true
                    no_errors:
                      description: 'Returns true to tell the status check is ''healthy''.'
                      type: boolean
                      nullable: false
            application/xml:
              schema:
                type: array
                items:
                  title: Status
                  description: 'Status get for groups get, read'
                  type: object
                  properties:
                    id:
                      type: string
                      nullable: false
                    status:
                      type: string
                      nullable: false
                    optional_reference:
                      type: string
                      nullable: true
                    context:
                      type: array
                      items: {  }
                      nullable: true
                    no_errors:
                      description: 'Returns true to tell the status check is ''healthy''.'
                      type: boolean
                      nullable: false
                  xml:
                    name: item
                xml:
                  name: response
      tags:
        - status
      summary: 'get/search all instances of status'
      operationId: resourceGetAllStatus
      parameters:
        -
          name: page
          in: query
          description: 'pagination index counting from 0'
          schema:
            type: integer
            minimum: 0
        -
          name: limit
          in: query
          description: 'number of results'
          schema:
            type: integer
            minimum: 1
        -
          name: status
          in: query
          description: 'search filter status'
          schema:
            type: string
  '/status/{id}':
    get:
      responses:
        200:
          description: 'Retrieves a single instance of status'
          headers: {  }
          content:
            application/json:
              schema:
                title: Status
                description: 'Status get for groups get, read'
                type: object
                properties:
                  id:
                    type: string
                    nullable: false
                  status:
                    type: string
                    nullable: false
                  optional_reference:
                    type: string
                    nullable: true
                  context:
                    type: array
                    items: {  }
                    nullable: true
                  no_errors:
                    description: 'Returns true to tell the status check is ''healthy''.'
                    type: boolean
                    nullable: false
            application/xml:
              schema:
                title: Status
                description: 'Status get for groups get, read'
                type: object
                properties:
                  id:
                    type: string
                    nullable: false
                  status:
                    type: string
                    nullable: false
                  optional_reference:
                    type: string
                    nullable: true
                  context:
                    type: array
                    items: {  }
                    nullable: true
                  no_errors:
                    description: 'Returns true to tell the status check is ''healthy''.'
                    type: boolean
                    nullable: false
                xml:
                  name: item
        404:
          $ref: '#/components/responses/NotFound'
      tags:
        - status
      summary: 'retrieve a single instance of status'
      operationId: resourceGetSingleStatus
    parameters:
      -
        name: id
        in: path
        description: 'the id of the resource'
        required: true
        schema:
          type: string
  '/status/{id}/md5':
    post:
      responses:
        200:
          description: 'Retrieves return value of md5'
          headers: {  }
        404:
          $ref: '#/components/responses/NotFound'
      tags:
        - status
      summary: ''
      operationId: resourcePostSubActionStatusMd5
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {  }
          application/xml:
            schema:
              type: object
              properties: {  }
              xml:
                name: item
        description: 'the resource as JSON to persist'
        required: true
    parameters:
      -
        name: id
        in: path
        description: 'the id of the resource'
        required: true
        schema:
          type: string
  '/status/{id}/reflection':
    post:
      responses:
        200:
          description: 'Retrieves return value of reflection'
          headers: {  }
        404:
          $ref: '#/components/responses/NotFound'
      tags:
        - status
      summary: ''
      operationId: resourcePostSubActionStatusReflection
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {  }
          application/xml:
            schema:
              type: object
              properties: {  }
              xml:
                name: item
        description: 'the resource as JSON to persist'
        required: true
    parameters:
      -
        name: id
        in: path
        description: 'the id of the resource'
        required: true
        schema:
          type: string
  '/status/{id}/other':
    post:
      responses:
        200:
          description: 'Retrieves return value of other'
          headers: {  }
        404:
          $ref: '#/components/responses/NotFound'
      tags:
        - status
      summary: ''
      operationId: resourcePostSubActionStatusOther
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {  }
          application/xml:
            schema:
              type: object
              properties: {  }
              xml:
                name: item
        description: 'the resource as JSON to persist'
        required: true
    parameters:
      -
        name: id
        in: path
        description: 'the id of the resource'
        required: true
        schema:
          type: string
servers:
  -
    url: 'http://sub-action.api.nl'
components:
  schemas:
    Error:
      type: object
      properties:
        type:
          type: string
        message:
          type: string
        code:
          oneOf:
            -
              type: string
            -
              type: integer
        trace:
          type: string
      xml:
        name: response
  responses:
    InvalidFormat:
      description: 'The body input could not be parsed'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
        application/xml:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: 'Response when resource could not be found'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
        application/xml:
          schema:
            $ref: '#/components/schemas/Error'
    ValidationError:
      description: 'The body input was in a proper format, but the input values were not valid'
      content:
        application/json:
          schema:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
              code:
                oneOf:
                  -
                    type: string
                  -
                    type: integer
              trace:
                type: string
              errors:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: string
            xml:
              name: response
        application/xml:
          schema:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
              code:
                oneOf:
                  -
                    type: string
                  -
                    type: integer
              trace:
                type: string
              errors:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: string
            xml:
              name: response
  headers:
    Count:
      description: 'number of results'
      schema:
        type: number
        format: int
    Url:
      description: 'url of header'
      schema:
        type: string
        format: url
